{"ast":null,"code":"var _jsxFileName = \"/media/jagjot/754e918e-a20d-43ad-a063-e00ef6501e4a/codes/Web 3.O/Dapp/CrowdFunding/src/App.js\",\n  _s = $RefreshSig$();\nimport abi from '../artifacts/contracts/CrowdFunding.sol/';\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport Buy from \"./components/Buy\";\nimport Contributers from \"./components/Contributers\";\nimport \"./components/Main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null\n  });\n  const [account, setAccount] = useState(\"No account connected\");\n  useEffect(() => {\n    const connectWallet = async () => {\n      const contractAddress = \"0x3641cd730DDacFc8CcF76A4744c6a998FbB34845\";\n      const contractABI = abi.abi;\n      try {\n        const {\n          ethereum\n        } = window;\n        if (ethereum) {\n          const account = await ethereum.request({\n            method: \"eth_requestAccounts\"\n          });\n          window.ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          window.ethereum.on(\"accountsChanged\", () => {\n            window.location.reload();\n          });\n          const provider = new ethers.providers.Web3Provider(ethereum);\n          const signer = provider.getSigner();\n          const contract = new ethers.Contract(contractAddress, contractABI, signer);\n          setAccount(account);\n          setState({\n            provider,\n            signer,\n            contract\n          });\n        } else {\n          alert(\"Please install metamask\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    connectWallet();\n  }, []);\n  const checkConnectedWallet = async () => {\n    const {\n      ethereum\n    } = window;\n    if (ethereum && ethereum.selectedAddress) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const connectedAccount = await signer.getAddress();\n      setState({\n        provider,\n        signer,\n        connectedAccount\n      });\n    }\n  };\n  useEffect(() => {\n    checkConnectedWallet();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Crowd\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"blue\",\n          children: \"Funding\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"A Permanent Repository for Charitable Contributions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"App-connection\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"blue\",\n          children: \"Connected Account:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 42\n        }, this), \" \", String(account).toUpperCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Buy, {\n        state: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Contributers, {\n        state: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"q7MGl/mVP2Tv4F9Nx7bFEGoB9H4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["abi","useState","useEffect","ethers","Buy","Contributers","jsxDEV","_jsxDEV","App","_s","state","setState","provider","signer","contract","account","setAccount","connectWallet","contractAddress","contractABI","ethereum","window","request","method","on","location","reload","providers","Web3Provider","getSigner","Contract","alert","error","console","log","checkConnectedWallet","selectedAddress","connectedAccount","getAddress","className","children","fileName","_jsxFileName","lineNumber","columnNumber","String","toUpperCase","_c","$RefreshReg$"],"sources":["/media/jagjot/754e918e-a20d-43ad-a063-e00ef6501e4a/codes/Web 3.O/Dapp/CrowdFunding/src/App.js"],"sourcesContent":["import abi from '../artifacts/contracts/CrowdFunding.sol/'\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport Buy from \"./components/Buy\";\nimport Contributers from \"./components/Contributers\";\nimport \"./components/Main.css\";\n\nfunction App() {\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null,\n  });\n  const [account, setAccount] = useState(\"No account connected\");\n\n  useEffect(() => {\n    const connectWallet = async () => {\n      const contractAddress = \"0x3641cd730DDacFc8CcF76A4744c6a998FbB34845\";\n      const contractABI = abi.abi;\n      try {\n        const { ethereum } = window;\n\n        if (ethereum) {\n          const account = await ethereum.request({\n            method: \"eth_requestAccounts\",\n          });\n\n          window.ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n\n          window.ethereum.on(\"accountsChanged\", () => {\n            window.location.reload();\n          });\n\n          const provider = new ethers.providers.Web3Provider(ethereum);\n          const signer = provider.getSigner();\n          const contract = new ethers.Contract(\n            contractAddress,\n            contractABI,\n            signer\n          );\n          setAccount(account);\n          setState({ provider, signer, contract });\n        } else {\n          alert(\"Please install metamask\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    connectWallet();\n  }, []);\n\n  const checkConnectedWallet = async () => {\n    const { ethereum } = window;\n    if (ethereum && ethereum.selectedAddress) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const connectedAccount = await signer.getAddress();\n      setState({ provider, signer, connectedAccount });\n    }\n  };\n\n  useEffect(() => {\n    checkConnectedWallet();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <h1>\n          Crowd<span className=\"blue\">Funding</span>\n        </h1>\n        <h4>A Permanent Repository for Charitable Contributions</h4>\n\n        {/* <div className=\"Account\"> */}\n          <p className=\"App-connection\"> <span className=\"blue\">Connected Account:</span> {String(account).toUpperCase()}</p>\n        {/* </div> */}\n\n        <Buy state={state} />\n        <Contributers state={state} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}