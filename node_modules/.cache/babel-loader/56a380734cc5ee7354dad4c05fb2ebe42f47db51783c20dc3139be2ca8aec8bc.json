{"ast":null,"code":"var _jsxFileName = \"/media/jagjot/754e918e-a20d-43ad-a063-e00ef6501e4a/codes/Web 3.O/Dapp/CrowdFunding/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport abi from \"./contracts/CrowdFunding.json\";\nimport Buy from \"./components/Buy\";\nimport Contributers from \"./components/Contributers\";\nimport \"./components/Main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null\n  });\n  const [account, setAccount] = useState(\"No account connected\");\n  useEffect(() => {\n    const connectWallet = async () => {\n      const contractAddress = \"0xCCEa6E4A3134726FBb66b90B8145BD126362a1aD\";\n      const contractABI = abi.abi;\n      try {\n        const {\n          ethereum\n        } = window;\n        if (ethereum) {\n          const accounts = await ethereum.request({\n            method: \"eth_requestAccounts\"\n          });\n          window.ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          window.ethereum.on(\"accountsChanged\", () => {\n            window.location.reload();\n          });\n          const provider = new ethers.providers.Web3Provider(ethereum);\n          const signer = provider.getSigner();\n          const contract = new ethers.Contract(contractAddress, contractABI, signer);\n          setAccount(accounts[0]);\n          setState({\n            provider,\n            signer,\n            contract\n          });\n        } else {\n          alert(\"Please install MetaMask\");\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    connectWallet();\n  }, []);\n  const buyTokens = async amount => {\n    try {\n      const {\n        contract,\n        signer\n      } = state;\n      const tx = await contract.buyTokens({\n        value: ethers.utils.parseEther(amount.toString())\n      });\n      await tx.wait();\n      console.log(\"Tokens bought successfully!\");\n    } catch (error) {\n      console.error(\"Error buying tokens: \", error);\n    }\n  };\n  const getContributors = async () => {\n    try {\n      const {\n        contract\n      } = state;\n      const contributors = await contract.getContributors();\n      console.log(\"Contributors: \", contributors);\n    } catch (error) {\n      console.error(\"Error fetching contributors: \", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Crowd\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"blue\",\n          children: \"Funding\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"A Permanent Repository for Charitable Contributions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"App-connection\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"blue\",\n          children: \"Connected Account:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), \" \", String(account).toUpperCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Buy, {\n        buyTokens: buyTokens\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Contributers, {\n        getContributors: getContributors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XreFmvXjC1cwFW+Zuhe9Zh4tFXg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","ethers","abi","Buy","Contributers","jsxDEV","_jsxDEV","App","_s","state","setState","provider","signer","contract","account","setAccount","connectWallet","contractAddress","contractABI","ethereum","window","accounts","request","method","on","location","reload","providers","Web3Provider","getSigner","Contract","alert","error","console","buyTokens","amount","tx","value","utils","parseEther","toString","wait","log","getContributors","contributors","className","children","fileName","_jsxFileName","lineNumber","columnNumber","String","toUpperCase","_c","$RefreshReg$"],"sources":["/media/jagjot/754e918e-a20d-43ad-a063-e00ef6501e4a/codes/Web 3.O/Dapp/CrowdFunding/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport abi from \"./contracts/CrowdFunding.json\";\nimport Buy from \"./components/Buy\";\nimport Contributers from \"./components/Contributers\";\nimport \"./components/Main.css\";\n\nfunction App() {\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null,\n  });\n  const [account, setAccount] = useState(\"No account connected\");\n\n  useEffect(() => {\n    const connectWallet = async () => {\n      const contractAddress = \"0xCCEa6E4A3134726FBb66b90B8145BD126362a1aD\";\n      const contractABI = abi.abi;\n      try {\n        const { ethereum } = window;\n\n        if (ethereum) {\n          const accounts = await ethereum.request({\n            method: \"eth_requestAccounts\",\n          });\n\n          window.ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n\n          window.ethereum.on(\"accountsChanged\", () => {\n            window.location.reload();\n          });\n\n          const provider = new ethers.providers.Web3Provider(ethereum);\n          const signer = provider.getSigner();\n          const contract = new ethers.Contract(\n            contractAddress,\n            contractABI,\n            signer\n          );\n          setAccount(accounts[0]);\n          setState({ provider, signer, contract });\n        } else {\n          alert(\"Please install MetaMask\");\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    connectWallet();\n  }, []);\n\n  const buyTokens = async (amount) => {\n    try {\n      const { contract, signer } = state;\n      const tx = await contract.buyTokens({\n        value: ethers.utils.parseEther(amount.toString()),\n      });\n      await tx.wait();\n      console.log(\"Tokens bought successfully!\");\n    } catch (error) {\n      console.error(\"Error buying tokens: \", error);\n    }\n  };\n\n  const getContributors = async () => {\n    try {\n      const { contract } = state;\n      const contributors = await contract.getContributors();\n      console.log(\"Contributors: \", contributors);\n    } catch (error) {\n      console.error(\"Error fetching contributors: \", error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <h1>\n          Crowd<span className=\"blue\">Funding</span>\n        </h1>\n        <h4>A Permanent Repository for Charitable Contributions</h4>\n\n        <p className=\"App-connection\">\n          <span className=\"blue\">Connected Account:</span>{\" \"}\n          {String(account).toUpperCase()}\n        </p>\n\n        <Buy buyTokens={buyTokens} />\n        <Contributers getContributors={getContributors} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,GAAG,MAAM,+BAA+B;AAC/C,OAAOC,GAAG,MAAM,kBAAkB;AAClC,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC;IACjCY,QAAQ,EAAE,IAAI;IACdC,MAAM,EAAE,IAAI;IACZC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,sBAAsB,CAAC;EAE9DC,SAAS,CAAC,MAAM;IACd,MAAMgB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,eAAe,GAAG,4CAA4C;MACpE,MAAMC,WAAW,GAAGhB,GAAG,CAACA,GAAG;MAC3B,IAAI;QACF,MAAM;UAAEiB;QAAS,CAAC,GAAGC,MAAM;QAE3B,IAAID,QAAQ,EAAE;UACZ,MAAME,QAAQ,GAAG,MAAMF,QAAQ,CAACG,OAAO,CAAC;YACtCC,MAAM,EAAE;UACV,CAAC,CAAC;UAEFH,MAAM,CAACD,QAAQ,CAACK,EAAE,CAAC,cAAc,EAAE,MAAM;YACvCJ,MAAM,CAACK,QAAQ,CAACC,MAAM,CAAC,CAAC;UAC1B,CAAC,CAAC;UAEFN,MAAM,CAACD,QAAQ,CAACK,EAAE,CAAC,iBAAiB,EAAE,MAAM;YAC1CJ,MAAM,CAACK,QAAQ,CAACC,MAAM,CAAC,CAAC;UAC1B,CAAC,CAAC;UAEF,MAAMf,QAAQ,GAAG,IAAIV,MAAM,CAAC0B,SAAS,CAACC,YAAY,CAACT,QAAQ,CAAC;UAC5D,MAAMP,MAAM,GAAGD,QAAQ,CAACkB,SAAS,CAAC,CAAC;UACnC,MAAMhB,QAAQ,GAAG,IAAIZ,MAAM,CAAC6B,QAAQ,CAClCb,eAAe,EACfC,WAAW,EACXN,MACF,CAAC;UACDG,UAAU,CAACM,QAAQ,CAAC,CAAC,CAAC,CAAC;UACvBX,QAAQ,CAAC;YAAEC,QAAQ;YAAEC,MAAM;YAAEC;UAAS,CAAC,CAAC;QAC1C,CAAC,MAAM;UACLkB,KAAK,CAAC,yBAAyB,CAAC;QAClC;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACDhB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMkB,SAAS,GAAG,MAAOC,MAAM,IAAK;IAClC,IAAI;MACF,MAAM;QAAEtB,QAAQ;QAAED;MAAO,CAAC,GAAGH,KAAK;MAClC,MAAM2B,EAAE,GAAG,MAAMvB,QAAQ,CAACqB,SAAS,CAAC;QAClCG,KAAK,EAAEpC,MAAM,CAACqC,KAAK,CAACC,UAAU,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC;MAClD,CAAC,CAAC;MACF,MAAMJ,EAAE,CAACK,IAAI,CAAC,CAAC;MACfR,OAAO,CAACS,GAAG,CAAC,6BAA6B,CAAC;IAC5C,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAMW,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAM;QAAE9B;MAAS,CAAC,GAAGJ,KAAK;MAC1B,MAAMmC,YAAY,GAAG,MAAM/B,QAAQ,CAAC8B,eAAe,CAAC,CAAC;MACrDV,OAAO,CAACS,GAAG,CAAC,gBAAgB,EAAEE,YAAY,CAAC;IAC7C,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAED,oBACE1B,OAAA;IAAKuC,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBxC,OAAA;MAAKuC,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBxC,OAAA;QAAAwC,QAAA,GAAI,OACG,eAAAxC,OAAA;UAAMuC,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eACL5C,OAAA;QAAAwC,QAAA,EAAI;MAAmD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE5D5C,OAAA;QAAGuC,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3BxC,OAAA;UAAMuC,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAC;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAAC,GAAG,EACnDC,MAAM,CAACrC,OAAO,CAAC,CAACsC,WAAW,CAAC,CAAC;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eAEJ5C,OAAA,CAACH,GAAG;QAAC+B,SAAS,EAAEA;MAAU;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7B5C,OAAA,CAACF,YAAY;QAACuC,eAAe,EAAEA;MAAgB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC1C,EAAA,CAxFQD,GAAG;AAAA8C,EAAA,GAAH9C,GAAG;AA0FZ,eAAeA,GAAG;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}