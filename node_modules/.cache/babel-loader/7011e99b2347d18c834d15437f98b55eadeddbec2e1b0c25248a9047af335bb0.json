{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"/media/jagjot/754e918e-a20d-43ad-a063-e00ef6501e4a/codes/Web 3.O/Dapp/CrowdFunding/client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/media/jagjot/754e918e-a20d-43ad-a063-e00ef6501e4a/codes/Web 3.O/Dapp/CrowdFunding/client/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/media/jagjot/754e918e-a20d-43ad-a063-e00ef6501e4a/codes/Web 3.O/Dapp/CrowdFunding/client/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/media/jagjot/754e918e-a20d-43ad-a063-e00ef6501e4a/codes/Web 3.O/Dapp/CrowdFunding/client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nvar defaultApplicationId = \"62e1ad51b37b8e00394bda3b\";\nexport var PocketProvider = /*#__PURE__*/function (_UrlJsonRpcProvider) {\n  _inherits(PocketProvider, _UrlJsonRpcProvider);\n  var _super = _createSuper(PocketProvider);\n  function PocketProvider() {\n    _classCallCheck(this, PocketProvider);\n    return _super.apply(this, arguments);\n  }\n  _createClass(PocketProvider, [{\n    key: \"isCommunityResource\",\n    value: function isCommunityResource() {\n      return this.applicationId === defaultApplicationId;\n    }\n  }], [{\n    key: \"getApiKey\",\n    value: function getApiKey(apiKey) {\n      var apiKeyObj = {\n        applicationId: null,\n        loadBalancer: true,\n        applicationSecretKey: null\n      };\n      // Parse applicationId and applicationSecretKey\n      if (apiKey == null) {\n        apiKeyObj.applicationId = defaultApplicationId;\n      } else if (typeof apiKey === \"string\") {\n        apiKeyObj.applicationId = apiKey;\n      } else if (apiKey.applicationSecretKey != null) {\n        apiKeyObj.applicationId = apiKey.applicationId;\n        apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n      } else if (apiKey.applicationId) {\n        apiKeyObj.applicationId = apiKey.applicationId;\n      } else {\n        logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n      }\n      return apiKeyObj;\n    }\n  }, {\n    key: \"getUrl\",\n    value: function getUrl(network, apiKey) {\n      var host = null;\n      switch (network ? network.name : \"unknown\") {\n        case \"goerli\":\n          host = \"eth-goerli.gateway.pokt.network\";\n          break;\n        case \"homestead\":\n          host = \"eth-mainnet.gateway.pokt.network\";\n          break;\n        case \"kovan\":\n          host = \"poa-kovan.gateway.pokt.network\";\n          break;\n        case \"matic\":\n          host = \"poly-mainnet.gateway.pokt.network\";\n          break;\n        case \"maticmum\":\n          host = \"polygon-mumbai-rpc.gateway.pokt.network\";\n          break;\n        case \"rinkeby\":\n          host = \"eth-rinkeby.gateway.pokt.network\";\n          break;\n        case \"ropsten\":\n          host = \"eth-ropsten.gateway.pokt.network\";\n          break;\n        default:\n          logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n            argument: \"network\",\n            value: network\n          });\n      }\n      var url = \"https://\".concat(host, \"/v1/lb/\").concat(apiKey.applicationId);\n      var connection = {\n        headers: {},\n        url: url\n      };\n      if (apiKey.applicationSecretKey != null) {\n        connection.user = \"\";\n        connection.password = apiKey.applicationSecretKey;\n      }\n      return connection;\n    }\n  }]);\n  return PocketProvider;\n}(UrlJsonRpcProvider);","map":{"version":3,"names":["_classCallCheck","_createClass","_inherits","_createSuper","Logger","version","logger","UrlJsonRpcProvider","defaultApplicationId","PocketProvider","_UrlJsonRpcProvider","_super","apply","arguments","key","value","isCommunityResource","applicationId","getApiKey","apiKey","apiKeyObj","loadBalancer","applicationSecretKey","throwArgumentError","getUrl","network","host","name","throwError","errors","INVALID_ARGUMENT","argument","url","concat","connection","headers","user","password"],"sources":["/media/jagjot/754e918e-a20d-43ad-a063-e00ef6501e4a/codes/Web 3.O/Dapp/CrowdFunding/client/node_modules/@ethersproject/providers/src.ts/pocket-provider.ts"],"sourcesContent":["\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nconst defaultApplicationId = \"62e1ad51b37b8e00394bda3b\";\n\n\nexport class PocketProvider extends UrlJsonRpcProvider {\n    readonly applicationId: string;\n    readonly applicationSecretKey: string;\n    readonly loadBalancer: boolean;\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { applicationId: string, applicationSecretKey: string, loadBalancer: boolean } = {\n            applicationId: null,\n            loadBalancer: true,\n            applicationSecretKey: null\n        };\n\n        // Parse applicationId and applicationSecretKey\n        if (apiKey == null) {\n            apiKeyObj.applicationId = defaultApplicationId;\n\n        } else if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n\n        } else if (apiKey.applicationSecretKey != null) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n\n        } else if (apiKey.applicationId) {\n            apiKeyObj.applicationId = apiKey.applicationId;\n\n        } else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"kovan\":\n                host = \"poa-kovan.gateway.pokt.network\";\n                break;\n            case \"matic\":\n                host = \"poly-mainnet.gateway.pokt.network\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai-rpc.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const url = `https:/\\/${ host }/v1/lb/${ apiKey.applicationId }`\n\n        const connection: ConnectionInfo = { headers: { }, url };\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.applicationId === defaultApplicationId);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}