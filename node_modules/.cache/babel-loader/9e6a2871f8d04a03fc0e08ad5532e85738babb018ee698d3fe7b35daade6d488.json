{"ast":null,"code":"var _jsxFileName = \"/media/jagjot/754e918e-a20d-43ad-a063-e00ef6501e4a/codes/Web 3.O/Dapp/CrowdFunding/src/App.js\",\n  _s = $RefreshSig$();\nimport abi from \"./contracts/CrowdFunding.json\";\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport Buy from \"./components/Buy\";\nimport Contributers from \"./components/Contributers\";\nimport \"./components/Main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null\n  });\n  const [account, setAccount] = useState(\"No account connected\");\n  const [walletConnected, setWalletConnected] = useState(false);\n  const connectWallet = async () => {\n    const contractAddress = \"0xA851205731b16Ba24C202AD6980587e9E0AB688b\";\n    const contractABI = abi.abi;\n    try {\n      const {\n        ethereum\n      } = window;\n      if (ethereum) {\n        const account = await ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        window.ethereum.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n        window.ethereum.on(\"accountsChanged\", () => {\n          window.location.reload();\n        });\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(contractAddress, contractABI, signer);\n        setAccount(account);\n        setState({\n          provider,\n          signer,\n          contract\n        });\n        setWalletConnected(true);\n      } else {\n        alert(\"Please install metamask\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: walletConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Crowd\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"blue\",\n            children: \"Funding\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"App-connection\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"blue\",\n            children: \"Connected Account:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), \" \", `${String(account).toUpperCase().slice(0, 5)}...${String(account).slice(-4).toUpperCase()}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Buy, {\n          state: state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Contributers, {\n          state: state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IHMgyL13PnVXcs0WFLIH1o2Hp1g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["abi","useState","useEffect","ethers","Buy","Contributers","jsxDEV","_jsxDEV","App","_s","state","setState","provider","signer","contract","account","setAccount","walletConnected","setWalletConnected","connectWallet","contractAddress","contractABI","ethereum","window","request","method","on","location","reload","providers","Web3Provider","getSigner","Contract","alert","error","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","String","toUpperCase","slice","onClick","_c","$RefreshReg$"],"sources":["/media/jagjot/754e918e-a20d-43ad-a063-e00ef6501e4a/codes/Web 3.O/Dapp/CrowdFunding/src/App.js"],"sourcesContent":["import abi from \"./contracts/CrowdFunding.json\";\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport Buy from \"./components/Buy\";\nimport Contributers from \"./components/Contributers\";\nimport \"./components/Main.css\";\n\nfunction App() {\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null,\n  });\n  const [account, setAccount] = useState(\"No account connected\");\n  const [walletConnected, setWalletConnected] = useState(false);\n\n  const connectWallet = async () => {\n    const contractAddress = \"0xA851205731b16Ba24C202AD6980587e9E0AB688b\";\n    const contractABI = abi.abi;\n    try {\n      const { ethereum } = window;\n\n      if (ethereum) {\n        const account = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n\n        window.ethereum.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n\n        window.ethereum.on(\"accountsChanged\", () => {\n          window.location.reload();\n        });\n\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(\n          contractAddress,\n          contractABI,\n          signer\n        );\n        setAccount(account);\n        setState({ provider, signer, contract });\n        setWalletConnected(true);\n      } else {\n        alert(\"Please install metamask\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div>\n      {walletConnected ? (\n        <div className=\"App\">\n          <div className=\"App-header\">\n            <h1>\n              Crowd<span className=\"blue\">Funding</span>\n            </h1>\n\n            <p className=\"App-connection\">\n              <span className=\"blue\">Connected Account:</span>{\" \"}\n              {`${String(account).toUpperCase().slice(0, 5)}...${String(account)\n                .slice(-4)\n                .toUpperCase()}`}\n            </p>\n\n            <Buy state={state} />\n            <Contributers state={state} />\n          </div>\n        </div>\n      ) : (\n        <button onClick={connectWallet}>Connect Wallet</button>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}