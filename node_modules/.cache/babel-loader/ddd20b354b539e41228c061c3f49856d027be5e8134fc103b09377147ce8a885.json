{"ast":null,"code":"var _jsxFileName = \"/media/jagjot/754e918e-a20d-43ad-a063-e00ef6501e4a/codes/Web 3.O/Dapp/CrowdFunding/src/components/Amount.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Amount = ({\n  state\n}) => {\n  _s();\n  const [RaisingAmt, setRaisingAmt] = useState(30);\n  const [raisedAmt, setRaisedAmt] = useState(0);\n  const {\n    contract\n  } = state;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (contract) {\n          const contributersData = await contract.displayAmount();\n          setRaisedAmt(contributersData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, [contract]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contri-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contributers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), contributers.map((contributers, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contri\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", contributers.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Time: \", new Date(contributers.timestamp * 1000).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"From: \", contributers.from.slice(0, 4).toUpperCase(), \"...\", contributers.from.slice(-4).toUpperCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Amount, \"h4UcCzfwqkqRo+OdVQknDJOG34c=\");\n_c = Amount;\nexport default Amount;\nvar _c;\n$RefreshReg$(_c, \"Amount\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Amount","state","_s","RaisingAmt","setRaisingAmt","raisedAmt","setRaisedAmt","contract","fetchData","contributersData","displayAmount","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","contributers","map","index","name","Date","timestamp","toLocaleString","from","slice","toUpperCase","_c","$RefreshReg$"],"sources":["/media/jagjot/754e918e-a20d-43ad-a063-e00ef6501e4a/codes/Web 3.O/Dapp/CrowdFunding/src/components/Amount.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst Amount = ({ state }) => {\n  const [RaisingAmt, setRaisingAmt] = useState(30);\n  const [raisedAmt, setRaisedAmt] = useState(0);\n  const { contract } = state;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (contract) {\n          const contributersData = await contract.displayAmount();\n          setRaisedAmt(contributersData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, [contract]);\n\n\n  return (\n    <div className=\"contri-container\">\n      <h2>Contributers</h2>\n      {contributers.map((contributers, index) => (\n        <div className=\"contri\" key={index}>\n          <p>Name: {contributers.name}</p>\n          <p>\n            Time: {new Date(contributers.timestamp * 1000).toLocaleString()}\n          </p>\n          <p>\n            From: {contributers.from.slice(0, 4).toUpperCase()}...\n            {contributers.from.slice(-4).toUpperCase()}\n          </p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Amount;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM;IAAEW;EAAS,CAAC,GAAGN,KAAK;EAE1BJ,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,IAAID,QAAQ,EAAE;UACZ,MAAME,gBAAgB,GAAG,MAAMF,QAAQ,CAACG,aAAa,CAAC,CAAC;UACvDJ,YAAY,CAACG,gBAAgB,CAAC;QAChC;MACF,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAGd,oBACER,OAAA;IAAKc,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/Bf,OAAA;MAAAe,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBC,YAAY,CAACC,GAAG,CAAC,CAACD,YAAY,EAAEE,KAAK,kBACpCtB,OAAA;MAAKc,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBf,OAAA;QAAAe,QAAA,GAAG,QAAM,EAACK,YAAY,CAACG,IAAI;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChCnB,OAAA;QAAAe,QAAA,GAAG,QACK,EAAC,IAAIS,IAAI,CAACJ,YAAY,CAACK,SAAS,GAAG,IAAI,CAAC,CAACC,cAAc,CAAC,CAAC;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC,eACJnB,OAAA;QAAAe,QAAA,GAAG,QACK,EAACK,YAAY,CAACO,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,EAAC,KACnD,EAACT,YAAY,CAACO,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MAAA;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA,GARuBG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAS7B,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChB,EAAA,CAtCIF,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AAwCZ,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}