{"ast":null,"code":"var _jsxFileName = \"/media/jagjot/754e918e-a20d-43ad-a063-e00ef6501e4a/codes/Web 3.O/Dapp/CrowdFunding/src/App.js\",\n  _s = $RefreshSig$();\nimport abi from \"./contracts/CrowdFunding.json\";\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport Buy from \"./components/Buy\";\nimport Contributers from \"./components/Contributers\";\nimport Amount from \"./components/Amount\";\nimport \"./components/Main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null\n  });\n  const [account, setAccount] = useState(\"No account connected\");\n  const connectWallet = async () => {\n    const contractAddress = \"0xA851205731b16Ba24C202AD6980587e9E0AB688b\";\n    const contractABI = abi.abi;\n    try {\n      const {\n        ethereum\n      } = window;\n      if (ethereum) {\n        const account = await ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        window.ethereum.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n        window.ethereum.on(\"accountsChanged\", () => {\n          window.location.reload();\n        });\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(contractAddress, contractABI, signer);\n        setAccount(account);\n        setState({\n          provider,\n          signer,\n          contract\n        });\n      } else {\n        alert(\"Please install metamask\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  connectWallet();\n  const checkConnectedWallet = async () => {\n    const {\n      ethereum\n    } = window;\n    if (ethereum && ethereum.selectedAddress) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const connectedAccount = await signer.getAddress();\n      setState({\n        provider,\n        signer,\n        connectedAccount\n      });\n    }\n  };\n  useEffect(() => {\n    checkConnectedWallet();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Crowd\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"blue\",\n          children: \"Funding\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"A Permanent Repository for Charitable Contributions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"App-connection\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"blue\",\n          children: \"Connected Account:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), \" \", String(account).toUpperCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Buy, {\n        state: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Contributers, {\n        state: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Amount, {\n        state: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XreFmvXjC1cwFW+Zuhe9Zh4tFXg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["abi","useState","useEffect","ethers","Buy","Contributers","Amount","jsxDEV","_jsxDEV","App","_s","state","setState","provider","signer","contract","account","setAccount","connectWallet","contractAddress","contractABI","ethereum","window","request","method","on","location","reload","providers","Web3Provider","getSigner","Contract","alert","error","console","log","checkConnectedWallet","selectedAddress","connectedAccount","getAddress","className","children","fileName","_jsxFileName","lineNumber","columnNumber","String","toUpperCase","_c","$RefreshReg$"],"sources":["/media/jagjot/754e918e-a20d-43ad-a063-e00ef6501e4a/codes/Web 3.O/Dapp/CrowdFunding/src/App.js"],"sourcesContent":["import abi from \"./contracts/CrowdFunding.json\";\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport Buy from \"./components/Buy\";\nimport Contributers from \"./components/Contributers\";\nimport Amount from \"./components/Amount\";\nimport \"./components/Main.css\";\n\nfunction App() {\n  const [state, setState] = useState({\n    provider: null,\n    signer: null,\n    contract: null,\n  });\n  const [account, setAccount] = useState(\"No account connected\");\n\n    const connectWallet = async () => {\n      const contractAddress = \"0xA851205731b16Ba24C202AD6980587e9E0AB688b\";\n      const contractABI = abi.abi;\n      try {\n        const { ethereum } = window;\n\n        if (ethereum) {\n          const account = await ethereum.request({\n            method: \"eth_requestAccounts\",\n          });\n\n          window.ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n\n          window.ethereum.on(\"accountsChanged\", () => {\n            window.location.reload();\n          });\n\n          const provider = new ethers.providers.Web3Provider(ethereum);\n          const signer = provider.getSigner();\n          const contract = new ethers.Contract(\n            contractAddress,\n            contractABI,\n            signer\n          );\n          setAccount(account);\n          setState({ provider, signer, contract });\n        } else {\n          alert(\"Please install metamask\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    connectWallet();\n\n  const checkConnectedWallet = async () => {\n    const { ethereum } = window;\n    if (ethereum && ethereum.selectedAddress) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const connectedAccount = await signer.getAddress();\n      setState({ provider, signer, connectedAccount });\n    }\n  };\n  \n  useEffect(() => {\n    checkConnectedWallet();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <h1>\n          Crowd<span className=\"blue\">Funding</span>\n        </h1>\n        <h4>A Permanent Repository for Charitable Contributions</h4>\n\n        <p className=\"App-connection\">\n          {\" \"}\n          <span className=\"blue\">Connected Account:</span>{\" \"}\n          {String(account).toUpperCase()}\n        </p>\n\n        <Buy state={state} />\n        <Contributers state={state} />\n        <Amount state={state} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}