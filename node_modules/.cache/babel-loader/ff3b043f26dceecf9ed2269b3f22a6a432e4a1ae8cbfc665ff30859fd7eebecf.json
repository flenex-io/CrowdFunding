{"ast":null,"code":"var _jsxFileName = \"/media/jagjot/754e918e-a20d-43ad-a063-e00ef6501e4a/codes/Web 3.O/Dapp/CrowdFunding/src/components/Amount.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contributers = ({\n  state\n}) => {\n  _s();\n  const [amtLeft, setAmtLeft] = useState(0); // State to hold the remaining amount\n  const {\n    contract\n  } = state;\n  useEffect(() => {\n    const fetchAmtLeft = async () => {\n      try {\n        if (contract) {\n          const remainingAmt = await contract.amtLeft();\n          setAmtLeft(remainingAmt.toNumber()); // Convert Big Number to number\n        }\n      } catch (error) {\n        console.error(\"Error fetching remaining amount:\", error);\n      }\n    };\n    fetchAmtLeft();\n  }, [contract]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contri-container\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Remaining Amount: \", amtLeft, \" Ether\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Contributers, \"H5OnWGchI4O2h5vygfAfI5dDbIs=\");\n_c = Contributers;\nexport default Contributers;\nvar _c;\n$RefreshReg$(_c, \"Contributers\");","map":{"version":3,"names":["useState","useEffect","ethers","jsxDEV","_jsxDEV","Contributers","state","_s","amtLeft","setAmtLeft","contract","fetchAmtLeft","remainingAmt","toNumber","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/media/jagjot/754e918e-a20d-43ad-a063-e00ef6501e4a/codes/Web 3.O/Dapp/CrowdFunding/src/components/Amount.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\n\nconst Contributers = ({ state }) => {\n  const [amtLeft, setAmtLeft] = useState(0); // State to hold the remaining amount\n  const { contract } = state;\n\n  useEffect(() => {\n    const fetchAmtLeft = async () => {\n      try {\n        if (contract) {\n          const remainingAmt = await contract.amtLeft();\n          setAmtLeft(remainingAmt.toNumber()); // Convert Big Number to number\n        }\n      } catch (error) {\n        console.error(\"Error fetching remaining amount:\", error);\n      }\n    };\n\n    fetchAmtLeft();\n  }, [contract]);\n\n  return (\n    <div className=\"contri-container\">\n      <h2>Remaining Amount: {amtLeft} Ether</h2>\n    </div>\n  );\n};\n\nexport default Contributers;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3C,MAAM;IAAEU;EAAS,CAAC,GAAGJ,KAAK;EAE1BL,SAAS,CAAC,MAAM;IACd,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,IAAID,QAAQ,EAAE;UACZ,MAAME,YAAY,GAAG,MAAMF,QAAQ,CAACF,OAAO,CAAC,CAAC;UAC7CC,UAAU,CAACG,YAAY,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QACvC;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF,CAAC;IAEDH,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,oBACEN,OAAA;IAAKY,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/Bb,OAAA;MAAAa,QAAA,GAAI,oBAAkB,EAACT,OAAO,EAAC,QAAM;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAACd,EAAA,CAxBIF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AA0BlB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}